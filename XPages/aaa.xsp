<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core">

	<xp:this.resources>
		<xp:script src="/ssjsGeneralUtils.jss" clientSide="false"></xp:script>
	</xp:this.resources>
	<xp:this.data>
		<xp:dominoDocument var="document1" action="openDocument"
			documentId="902D5BD1ED66A17606258349007F1387"
			formName="Registration">
		</xp:dominoDocument>
	</xp:this.data>
	<xp:br></xp:br>
	
	<xp:br></xp:br>
			<xp:br></xp:br>
				<xp:br></xp:br>
					<xp:br></xp:br>
						<xp:br></xp:br>
							<xp:br></xp:br>
								<xp:br></xp:br>
								
	
	<xp:image id="image1">

		<xp:this.value><![CDATA[#{javascript:return facesContext.getExternalContext().getRequest().getHeader("Host") + facesContext.getExternalContext().getRequest().getContextPath() + "/0/" 
+"902D5BD1ED66A17606258349007F1387/$file/image.png";}]]></xp:this.value>
	<xp:this.url><![CDATA[#{javascript:var imgName ="image.png"
if (imgName =="") {
	return "";
} else {
return  
 "/0/"
+ "902D5BD1ED66A17606258349007F1387"
+ "/$File/" + imgName;
}}]]></xp:this.url></xp:image>
	<xp:br></xp:br>
	<xp:br></xp:br>
	<xp:text escape="true" id="computedField1">
		<xp:this.value><![CDATA[#{javascript:	var msg = "";
try{
	document1.replaceItemValue("sigDateTime", @Now());
	if(document1.save()){
	var readyForNext = true;
	if(document1.getClass().getName().equalsIgnoreCase('lotus.domino.local.Document')){
		var nDoc:NotesDocument=document1;
	} else {
		var nDoc:NotesDocument=document1.getDocument();
	}
	var passAge = SSJSgetItemValueAsString(nDoc, "regAge", true);
		if(passAge.equalsIgnoreCase("Adult")){
			//need just horse waiver
		} else {
			if(isNaN(passAge)){
				//problem
			} else {
				if(parseInt(passAge) < 18){
					//need minor waiver>. need 3 fields and signature
					if(SSJSgetItemValueAsString(nDoc, "minorState", true)==""){
						addFacesMessage("Minor State is Required", "minorState1");
						msg = msg + "Minor State is Required ";
						readyForNext=false;
					}
					if(SSJSgetItemValueAsString(nDoc, "minorDoB", true)==""){
						addFacesMessage("Minor DOB is Required", "1");
						msg = msg + "Minor DOBe is Required ";
						readyForNext=false;
					}
					if(SSJSgetItemValueAsString(nDoc, "minorGuardName", true)==""){
						addFacesMessage("Guardian Name is Required", "minorGuardName1");
						msg = msg + "Guardian Name is Required ";
						readyForNext=false;
					}
					//dBar.info("Age is under 18 and readyForNext is: " + readyForNext);
				} 
			}
		}
		
		
		base64ToNotesItemAttachment(imageString, nDoc);
		nDoc.save();
		

	var haveSig = false;
	var AStr='';
	if(document1.getAttachmentList("sigImage").isEmpty()){
		dBar.info("No attachments");
		AStr = 'No attachments';
	} else {
		AStr = document1.getAttachmentList("sigImage").get(0).getName();
		dBar.info("Attachment " + AStr);
		haveSig = true;
	}
	
	var sigOnFile = SSJSgetItemValueAsString(nDoc, "sigOnFileYN", true);
	
	if(sigOnFile.equalsIgnoreCase("Yes")){
		dBar.info("Sig on file");
		haveSig = true;
	} 
	if(AStr.equalsIgnoreCase("image.png")){
		dBar.info("image found");
		haveSig = true;
	}
	if(haveSig){
		//we have a signature
		dBar.info("haveSig is true");
	} else {
		readyForNext=false;
		msg = msg + "Signature or On File Required";
		addFacesMessage("Signature or On File Required", "minorGuardName1");
		//dBar.info("need a sig it's false");
	}
	 if (readyForNext){
		//return msg;
		return "http://"+  facesContext.getExternalContext().getRequest().getHeader("Host") + facesContext.getExternalContext().getRequest().getContextPath() +"/m_CostFinal.xsp?docID="+ nDoc.getNoteID();
	} else {
		view.postScript("alert('" + msg + "')");
		//return msg;
		//return "http://"+  facesContext.getExternalContext().getRequest().getHeader("Host") + facesContext.getExternalContext().getRequest().getContextPath() +"/m_Waivers.xsp?docID="+ nDoc.getNoteID();
	}
}
} catch (e) {
	msg = e;
	view.postScript("alert('" + msg + "')");
	//return "http://"+  facesContext.getExternalContext().getRequest().getHeader("Host") + facesContext.getExternalContext().getRequest().getContextPath() +"/m_Waivers.xsp?docID="+ nDoc.getNoteID();
	return msg;
}}]]></xp:this.value>
	</xp:text></xp:view>
